#include <stdio.h>
#include <limits.h>

int g[50][50], p[50], v[50];

int dfs(int n, int s, int t) {
    v[s] = 1;
    if (s == t) return 1;
    for (int i = 0; i < n; i++) {
        if (!v[i] && g[s][i] > 0) {
            p[i] = s;
            if (dfs(n, i, t)) return 1;
        }
    }
    return 0;
}

int maxFlow(int n, int s, int t) {
    int flow = 0;
    while (1) {
        for (int i = 0; i < n; i++) v[i] = 0;
        if (!dfs(n, s, t)) break;

        int f = INT_MAX;
        for (int i = t; i != s; i = p[i])
            if (g[p[i]][i] < f) f = g[p[i]][i];

        for (int i = t; i != s; i = p[i]) {
            g[p[i]][i] -= f;
            g[i][p[i]] += f;
        }

        flow += f;
    }
    return flow;
}

int main() {
    int n, e, u, v, c, s, t;
    printf("Vertices: "); scanf("%d", &n);
    printf("Edges: "); scanf("%d", &e);
    for (int i = 0; i < e; i++) {
        scanf("%d %d %d", &u, &v, &c);
        g[u][v] = c;
    }
    printf("Source: "); scanf("%d", &s);
    printf("Sink: "); scanf("%d", &t);
    printf("Max Flow: %d\n", maxFlow(n, s, t));
    return 0;
}
